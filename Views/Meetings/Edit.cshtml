@model SacramentPlanner.Models.Meeting

@{
    ViewData["Title"] = "Edit Meeting";
}

<h1>Edit Meeting</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="MeetingDate" class="control-label"></label>
                <input asp-for="MeetingDate" class="form-control" />
                <span asp-validation-for="MeetingDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Conducting" class="control-label"></label>
                <input asp-for="Conducting" class="form-control" />
                <span asp-validation-for="Conducting" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OpeningPrayer" class="control-label"></label>
                <input asp-for="OpeningPrayer" class="form-control" />
                <span asp-validation-for="OpeningPrayer" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ClosingPrayer" class="control-label"></label>
                <input asp-for="ClosingPrayer" class="form-control" />
                <span asp-validation-for="ClosingPrayer" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OpeningHymn" class="control-label"></label>
                <input asp-for="OpeningHymn" class="form-control" />
                <span asp-validation-for="OpeningHymn" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SacramentHymn" class="control-label"></label>
                <input asp-for="SacramentHymn" class="form-control" />
                <span asp-validation-for="SacramentHymn" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IntermediateHymn" class="control-label"></label>
                <input asp-for="IntermediateHymn" class="form-control" />
                <span asp-validation-for="IntermediateHymn" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ClosingHymn" class="control-label"></label>
                <input asp-for="ClosingHymn" class="form-control" />
                <span asp-validation-for="ClosingHymn" class="text-danger"></span>
            </div>
            <div class="form-group speakers">
                <div>
                    @{
                        int i = 1;
                        foreach (var item in ViewData["Speakers"] as IEnumerable<SacramentPlanner.Models.Speaker>)
                        {
                            // https://stackoverflow.com/questions/24982032/foreach-on-viewdata-in-mvc-4-view
                            <div>
                                <input type="text" name="Speaker[@i]" value="@item.Name" class="form_control" />
                                <input type="text" name="Subject[@i]" value="@item.Subject" class="form_control" />
                                <a href="javascript:void(0);" class="remove_speaker"><img src="remove-icon.png" /></a>
                            </div>
                            // increase count to separate speakers
                            i++;
                        }
                    }

                    <input id="add_speaker" type="submit" value="Add Speaker" class="btn btn-primary" />
                </div>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <!--script>
        // https://www.codexworld.com/add-remove-input-fields-dynamically-using-jquery/

        $(document).ready(function () {
            var wrapper = $(".speakers"); //Input field wrapper
            var x = 1;
            // remove speaker
            $(wrapper).on('click', '.remove_speaker', function (e) {
                e.preventDefault();
                $(this).parent('div').remove();
            });

            // add new speaker
            $("#add_speaker").click(function (e) {
                // alert("click");
                e.preventDefault();
                var newSpeaker = '<div><input type="text" name="Speaker[' + x + ']" class="form_control" /><input type="text" name="Subject[' + x + ']" class="form_control" /><a href="javascript:void(0);" class="remove_speaker"><img src="remove-icon.png" /></a></div>';
                x++;
                $(wrapper).append(newSpeaker);
            });
        });
    </script-->
}
